# Pass scripted responses to an interactive command:
command [arguments] <<EOF
response1
response2
etc.
EOF

# Pass scripted commands to a chroot session:
arch-chroot /mnt /bin/bash <<EOF
command1
command2
etc.
EOF

# Execute a local script file in a chroot session:
arch-chroot /mnt /bin/bash < script_file.sh

# Get an array of ip addresses configured
ip_addr=$(ip addr | grep 'inet ' | grep -v ' lo' | awk '{print $2}' | cut -f1 -d/)

# Clean SSH session ############################################################
ssh_options='-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
ssh $ssh_options user@${1}

# GRUB BIOS ####################################################################
pacman -S grub
grub-install --target=i386-pc /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

# GRUB EFI #####################################################################
pacman -S grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=boot
mv /boot/EFI/boot/grubx64.efi /boot/EFI/boot/bootx64.efi
grub-mkconfig -o /boot/grub/grub.cfg

# Install GUI ##################################################################
pacman -S xorg-server xf86-video-vesa xf86-input-synaptics xfce4 gvfs mousepad
echo "exec startxfce4" >> /home/user/.xinitrc


pacman -S firefox thunderbird terminator libreoffice
pacman -S virtualbox-guest-utils

# visudo <<EOF
# :
# s/# \(%wheel ALL=(ALL) ALL\)/\1/
# :
# x
# EOF

# cpu_count=$(cat /proc/cpuinfo | grep processor | wc -l)
# ram_size=$(cat /proc/meminfo | grep MemTotal | awk '{print $2}') # KB
# hdd_size=$(cat /proc/partitions | grep "${disk_dev}" | head -n1 | awk '{print $3}') # KB
# efi_size=$(( 200 * 1024 ))  #200MB = 204800KB
# linux_size=$(( $hdd_size - $efi_size ))
# echo "Linux partition size is ${linux_size} KB"

# Change swappiness:
echo 'vm.swappiness = 1' | sudo tee -a /etc/sysctl.d/99-sysctl.conf

# iso_dev=$(vboxmanage showvminfo Arch\ Base\ Demo | \
# grep archlinux-2016.03.01-dual.iso | \
# cut -f1 -d:)

# echo VBoxManage storageattach Arch\ Base\ Demo \
# --storagectl ${iso_dev::3} \
# --port ${iso_dev:5:1} \
# --device ${iso_dev:8:1} \
# --medium emptydrive
#
# VBoxManage startvm Arch\ Base\ Demo


# Setup GPT partitions on a BIOS system:
# if [!$EFI] && [$GPT]; then
#     linux_size=$(cat /proc/partitions | grep "${disk_dev}2" | awk '{print $3}') # KB
#     e2fsck /dev/${disk_dev}2
#     resize2fs /dev/${disk_dev}2 $(( $linux_size - 1024 ))K
#     create_partition FREE ef02
# fi
